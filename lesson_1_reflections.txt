How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    The tools that make it easy to spot the differences between versions of a
code file are very helpful because you don't have to go through lines of code
trying to find the differences, they are found and pointed out to you through
these tools.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Having this easy access makes you more efficient because you do not waste
time manually saving versions, keeping track of them, or dealing with the
problems of forgetting to save a previous verson(s).

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    You are able to save at logical checkpoints. Auto-saving might not always be done at appropriate times, creating unneccesary versions. However, manual saving requires you to remember to save which auto-saving does not.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because Git and these other version control systems that allow saving multiple files are systems for coders. Coders often work with multiple dependent files where changes in one file affect other files.

How can you use the commands git log and git diff to view the history of files?

    By using the command git log you are able to see all previous commits with notes about their changes. You can use git diff between two of these commits to see exactly which lines of the corresponding files changed. With these tools you can see the history of the files through their logical checkpoints.

How might using version control make you more confident to make changes that
could break something?

    Using version control made me more confident to make changes that could break something because I can now jump to any commit both forwards and backwards in the git log history. As long as commits are made before I make changes I can rest assured that I will be able to go back to those previous commits and back again to the most recent commits.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to use git to more easily make changes in code and be able to use github to collaborate with others on larger projects.